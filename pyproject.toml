[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "scapi-py"
version = "2.0.1"
description = "Dead simple, self-contained, single-file API load testing tool built on FastAPI."
readme = "README.md"
authors = [{ name = "Sergey Silaev", email = "hello@8am.dev" }]
license = "MIT"
requires-python = ">=3.10"
keywords = [
    "python",
    "api",
    "load",
    "testing",
    "single-file",
    "tool",
    "fastapi",
    "python310",
    "python311",
    "python312",
    "python313",
]

classifiers = [
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Topic :: Education :: Testing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Traffic Generation",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
    "Framework :: Pydantic",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
]

dependencies = [
    "fastapi==0.116.1",
    "httpx==0.28.1",
    "pydantic>=2.11.7",
    "structlog==25.1.0",
    "uvicorn==0.35.0",
    "uvloop==0.21.0",
]

[dependency-groups]
dev = [
    "coverage>=7.6.4",
    "pre-commit>=4.0.1",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.3.3",
    "pyupgrade>=3.19.0",
    "ruff>=0.7.1",
]

[project.urls]
"Source code" = "https://github.com/sesav/scapi-py"

[project.scripts]
scapi = "scapi:main"

[tool.hatch.build.targets.wheel]
packages = ["scapi.py"]

[tool.coverage.run]
data_file = "coverage/coverage"
parallel = true
branch = true

[tool.coverage.report]
fail_under = 100
skip_covered = true
skip_empty = true
omit = ["./tests/*.py"]

# vim: ts=4 sts=4 sw=4 et
